--- urpmi-6.70.orig/urpmi	2012-08-05 23:54:07.014815304 +0400
+++ urpmi-6.70/urpmi	2012-08-06 00:03:17.551408644 +0400
@@ -51,7 +51,6 @@
 our $logfile = '';
 our $restricted = 0;
 our $forcekey = 0;
-our $force_dudf = 0;
 
 my @files;
 my @src_files;
@@ -63,17 +62,6 @@
 $ENV{HOME} ||= "/root";
 $ENV{USER} ||= "root";
 
-sub dudf_invoke {
-    my ($dudf, $methodname, @args) = @_;
-
-    if ($dudf) {
-        $dudf->$methodname(@args);
-    } elsif ($methodname eq "dudf_exit") {
-	my ($exit_code) = @args;
-	exit($exit_code);
-    }
-}
-
 sub usage () {
     print N("urpmi version %s
 Copyright (C) 1999-2011 Mandriva.
@@ -196,12 +184,6 @@
 }
 
 my $urpm = urpm->new_parse_cmdline or exit(1);
-my $dudf;
-
-eval {
-    require urpm::dudf;
-    $dudf = new urpm::dudf(\$urpm, $command_line, $force_dudf);
-};
 
 if (@ARGV && $auto_select) {
     print STDERR N("Error: can't use --auto-select along with package list.\n");
@@ -422,8 +404,6 @@
 
 my $rpm_lock = !$env && !$options{nolock} && urpm::lock::rpm_db($urpm, 'exclusive', wait => $options{wait_lock});
 
-dudf_invoke($dudf, "store_userpkgs", @names);
-
 #- search the packages according to the selection given by the user.
 my $search_result = '';
 if (@names) {
@@ -537,8 +517,7 @@
     } else {
 	my $noexpr = N("Nn");
 	$msg .= N("\nContinue installation anyway?");
-	$force || message_input_($msg . N("\nContinue installation anyway?") . N(" (Y/n) "), boolean => 1) !~ /[$noexpr]/
-	    or dudf_invoke($dudf, "dudf_exit", 17, $msg);
+	$force || message_input_($msg . N("\nContinue installation anyway?") . N(" (Y/n) "), boolean => 1) !~ /[$noexpr]/;;
     }
     # Whatever option we selected, the overall installation should fail if some packages are unselected
     $postponed_msg .= $msg."\n";
@@ -555,8 +534,7 @@
 	print "$msg\n";
     } else {
 	my $noexpr = N("Nn");
-	$force || message_input_($msg . N("\nContinue installation anyway?") . N(" (Y/n) "), boolean => 1) !~ /[$noexpr]/
-	    or dudf_invoke($dudf, "dudf_exit", 17, $msg);;
+	$force || message_input_($msg . N("\nContinue installation anyway?") . N(" (Y/n) "), boolean => 1) !~ /[$noexpr]/;;
     }
     # Whatever option we selected, the overall installation should fail if some packages are unselected
     $postponed_msg .= $msg."\n";
@@ -583,7 +561,6 @@
 	: N("The installation cannot continue because the following packages
 have to be removed for others to be upgraded:\n%s\n", $list);
 	print "$msg\n";
-	dudf_invoke($dudf, "dudf_exit", 0, $msg);
     }
 
     my $msg = urpm::select::conflicting_packages_msg_($urpm, $state, \@conflicting_pkgs_msgs);
@@ -640,8 +617,6 @@
 }
 $urpm->{nb_install} = @to_install;
 
-dudf_invoke($dudf, "store_toinstall", @to_install);
-
 if (!$urpm->{options}{auto} && $ask_user && $urpm->{nb_install} || $env && !$options{debug__do_not_install}) {
     my $msg = $urpm->{nb_install} == 1 ? N("To satisfy dependencies, the following package is going to be installed:") 
 		: N("To satisfy dependencies, the following packages are going to be installed:");
@@ -667,8 +642,6 @@
     $force || message_input_($p . N(" (Y/n) "), boolean => 1) !~ /[$noexpr]/ or exit 0;
 }
 
-dudf_invoke($dudf, "check_removed_upgraded", $state);
-
 my $exit_code = urpm::main_loop::run($urpm, $state, 
 				     int(@names || @src_names || @files || @src_files), 
 				     \@ask_unselect, \%requested, {
@@ -707,7 +680,6 @@
     },                           
     trans_error_summary => sub {
         my ($_nok, $errors) = @_;
-        dudf_invoke($dudf, "set_error_msg", join("\n",  map { "\t$_" } @$errors));
     },
     ask_yes_or_no => sub {
 	my ($_title, $msg) = @_; # graphical title
@@ -724,13 +696,13 @@
     }
 }, $postponed_code);
 
-if ($exit_code == 0 && $auto_select && !$options{auto_orphans}) {
-    if (urpm::orphans::check_unrequested_orphans_after_auto_select($urpm)) {
-	if (my $msg = urpm::orphans::get_now_orphans_msg($urpm)) {
-	    print "\n", $msg;
-	}
-    }
-}
+#if ($exit_code == 0 && $auto_select && !$options{auto_orphans}) {
+#    if (urpm::orphans::check_unrequested_orphans_after_auto_select($urpm)) {
+#	if (my $msg = urpm::orphans::get_now_orphans_msg($urpm)) {
+#	    print "\n", $msg;
+#	}
+#   }
+#}
 
 unless ($env || $options{nolock}) {
     $urpmi_lock->unlock;
@@ -774,4 +746,3 @@
 # Show postponed message before exiting
 print $postponed_msg if $postponed_code != 0;
 
-dudf_invoke($dudf, "dudf_exit", $exit_code);

--- urpmi-6.70.orig/urpm/args.pm	2011-12-21 21:21:35.000000000 +0400
+++ urpmi-6.70/urpm/args.pm	2012-08-06 12:26:21.000000000 +0400
@@ -384,13 +384,6 @@
 
 );
 
-eval
-{
-    require urpm::dudf;
-    $options_spec{'urpmi'}{'force-dudf'} = \$::force_dudf;
-};
-
-
 # generate urpmf options callbacks
 sub add_urpmf_cmdline_tags {
     foreach my $k (@_) {
